<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RE Blog</title>
  
  
  <link href="https://blog.randomench.top/atom.xml" rel="self"/>
  
  <link href="https://blog.randomench.top/"/>
  <updated>2022-06-05T04:36:44.782Z</updated>
  <id>https://blog.randomench.top/</id>
  
  <author>
    <name>RandomEnch</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python中使用lxml分析HTML</title>
    <link href="https://blog.randomench.top/article/4e2af80c611a/"/>
    <id>https://blog.randomench.top/article/4e2af80c611a/</id>
    <published>2022-05-26T11:20:55.000Z</published>
    <updated>2022-06-05T04:36:44.782Z</updated>
    
    <content type="html"><![CDATA[<h1>Python中使用lxml分析HTML</h1><p>使用<code>lxml.html</code>库中的<code>fromstring</code>模块分析html</p><span id="more"></span><h2 id="xpath表达式">xpath表达式</h2><p>绝对路径 如 <code>page.xpath(&quot;/html/body/p&quot;)</code> ，它会找到body这个节点下所有的p标签 <br>相对路径 <code>page.xpath(&quot;//p&quot;)</code> ,它会找到整个html代码里的所有p标签。</p><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td>nodename</td><td>选取此节点的所有子节点</td></tr><tr><td>/</td><td>从根节点选取</td></tr><tr><td>//</td><td>从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置</td></tr><tr><td>.</td><td>选取当前节点</td></tr><tr><td>…</td><td>选取当前节点的父节点</td></tr><tr><td>@</td><td>选取属性</td></tr></tbody></table><table><thead><tr><th>表达式</th><th>结果</th></tr></thead><tbody><tr><td>/div/book[1]</td><td>div子元素的第一个book元素</td></tr><tr><td>/div/book[last()]</td><td>div子元素的最后一个book元素</td></tr><tr><td>/div/book[last()-1]</td><td>div子元素的倒数第二个book元素</td></tr><tr><td>/div/book[position()&lt;3]</td><td>最前面的两个div元素的子元素的book元素</td></tr><tr><td>//title[@lang]</td><td>所有拥有名为lang的属性的title元素</td></tr><tr><td>/html/body/a[text()=“Python”]</td><td>按照文本内容索引</td></tr><tr><td>/html/body/a[position()=2]]</td><td>按照文本内容索引</td></tr><tr><td>//title[@lang=’ eng’]</td><td>所有title元素，且这些元素拥有值为eng 的lang属性</td></tr><tr><td>/div/book[price&gt;35.00]</td><td>div元素所有book元素，且其中price元素值大于35.00</td></tr><tr><td>/div/book[price&gt;35.00]/title</td><td>div元素中book元素的所有title元素，且其中的price元素的值须大于35.00</td></tr></tbody></table><table><thead><tr><th>表达式</th><th>结果</th></tr></thead><tbody><tr><td>/bookstore/*</td><td>选取 bookstore 元素的所有子元素</td></tr><tr><td>//*</td><td>选取文档中的所有元素</td></tr><tr><td>//title[@*]</td><td>选取所有带有属性的 title 元素</td></tr><tr><td>//book/title | //book/price</td><td>选取 book 元素的所有 title 和 price 元素</td></tr></tbody></table><h2 id="常规引用">常规引用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml.html <span class="keyword">import</span> fromstring</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parser_html</span>(<span class="params">html: <span class="built_in">str</span></span>):</span><br><span class="line">    selector = fromstring(html)</span><br><span class="line">    name = selector.xpath(<span class="string">&#x27;.//form/div/div/text()&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1&gt;Python中使用lxml分析HTML&lt;/h1&gt;
&lt;p&gt;使用&lt;code&gt;lxml.html&lt;/code&gt;库中的&lt;code&gt;fromstring&lt;/code&gt;模块分析html&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://blog.randomench.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Python" scheme="https://blog.randomench.top/tags/Python/"/>
    
    <category term="HTML" scheme="https://blog.randomench.top/tags/HTML/"/>
    
    <category term="编程" scheme="https://blog.randomench.top/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="爬虫" scheme="https://blog.randomench.top/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>在网页上加入live2d</title>
    <link href="https://blog.randomench.top/article/ceb8d296d4c1/"/>
    <id>https://blog.randomench.top/article/ceb8d296d4c1/</id>
    <published>2022-05-25T08:40:55.000Z</published>
    <updated>2022-05-26T14:28:00.191Z</updated>
    
    <content type="html"><![CDATA[<h1>Live2D Widget</h1><p><img src="https://forthebadge.com/images/badges/built-with-love.svg" alt=""><img src="https://forthebadge.com/images/badges/uses-html.svg" alt=""><img src="https://forthebadge.com/images/badges/made-with-javascript.svg" alt=""><img src="https://forthebadge.com/images/badges/contains-cat-gifs.svg" alt=""><img src="https://forthebadge.com/images/badges/powered-by-electricity.svg" alt=""><img src="https://forthebadge.com/images/badges/makes-people-smile.svg" alt=""></p><h2 id="项目地址">项目地址</h2><p>我的Fork: <a href="https://github.com/RandomEnch/live2d-widget">https://github.com/RandomEnch/live2d-widget</a> <br>原地址: <a href="https://github.com/stevenjoezhang/live2d-widget">https://github.com/stevenjoezhang/live2d-widget</a> <br>修改于: <a href="https://github.com/fghrsh/live2d_demo">https://github.com/fghrsh/live2d_demo</a> <br>API: <a href="https://github.com/fghrsh/live2d_api">https://github.com/fghrsh/live2d_api</a></p><h2 id="特点">特点</h2><p>在网页中添加 Live2D 看板娘。兼容 PJAX，支持无刷新加载。<br>警告：本项目使用了大量 ES6 语法，不支持 IE 11 等老旧浏览器。</p><h2 id="示例">示例</h2><p>在PC端博客的右下角可查看效果。<br><img src="/img/live2d/live2d_demo.png" width="280" /></p><h2 id="依赖">依赖</h2><p>插件需要 Font Awesome 图标支持，请确保相关样式表已在页面中加载。以 Font Awesome v6 为例，请在 <code>&lt;head&gt;</code> 中导入 <code>all.min.css</code> 。<br>建议保存到本地后导入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://blog.randomench.top/live2d-widget/all.min.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用">使用</h2><p>将这一行代码加入<code>&lt;head&gt;</code>或<code>&lt;body&gt;</code>，即可展现出效果：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://blog.randomench.top/live2d-widget/autoload.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果网站启用了 PJAX，由于看板娘不必每页刷新，因此要注意将相关脚本放到 PJAX 刷新区域之外。</p><p>换句话说，如果你是小白，或者只需要最基础的功能，就只用把这一行代码，连同前面加载 Font Awesome 的一行代码，一起放到 html 的 <code>&lt;head&gt;</code> 中即可。<br>对于用各种模版引擎（例如 Nunjucks，Jinja 或者 PHP）生成的页面，也要自行修改，方法类似，只是可能略为麻烦。</p><p>但是！我们强烈推荐自己进行配置，否则很多功能是不完整的，并且可能产生问题！<br>如果你有兴趣自己折腾的话，请看下面的详细说明。</p><h2 id="自定义配置">自定义配置</h2><p>因为原来的项目使用了jsdeliver，现在jsdeliver在大陆不可用，因此原项目无法正常使用，此处使用的是我自己构建的版本。<br>如果想自己修改使用，请自行clone原项目仓库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/stevenjoezhang/live2d-widget.git</span><br></pre></td></tr></table></figure><p>原项目部分内容已失效，如不想更改，可clone我的fork仓库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/RandomEnch/live2d-widget.git</span><br></pre></td></tr></table></figure><h3 id="修改">修改</h3><p>修改<code>autoload.js</code>第34行后部分为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">initWidget</span>(&#123;</span><br><span class="line"><span class="attr">waifuPath</span>: live2d_path + <span class="string">&quot;waifu-tips.json&quot;</span>,</span><br><span class="line"><span class="attr">apiPath</span>: <span class="string">&quot;你的自建api地址(可本地，可链接)&quot;</span>,</span><br><span class="line"><span class="comment">//cdnPath: &quot;https://cdn.jsdelivr.net/gh/fghrsh/live2d_api/&quot;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="API">API</h3><p><code>initWidget</code> 方法接受名为 <code>apiPath</code> 和 <code>cdnPath</code> 的参数，两者设置其中一项即可。其中 <code>apiPath</code> 为后端 API 的 URL，可以自行搭建，并增加模型。<br>由于请求的 <code>cdnPath</code> 也使用了jsdeliver，请自建 <code>apiPath</code> 后端api。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/fghrsh/live2d_demo.git</span><br></pre></td></tr></table></figure><p>将api放在网站目录中即可本地引用api，<code>autoload.js</code>格式为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">initWidget</span>(&#123;</span><br><span class="line"><span class="attr">waifuPath</span>: live2d_path + <span class="string">&quot;waifu-tips.json&quot;</span>,</span><br><span class="line"><span class="attr">apiPath</span>: <span class="string">&quot;/live2d_demo/&quot;</span>,</span><br><span class="line"><span class="comment">//cdnPath: &quot;https://cdn.jsdelivr.net/gh/fghrsh/live2d_api/&quot;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="目录结构-Files">目录结构 Files</h2><ul><li><code>waifu-tips.js</code> 包含了按钮和对话框的逻辑；</li><li><code>waifu-tips.json</code> 中定义了触发条件（<code>selector</code>，CSS 选择器）和触发时显示的文字（<code>text</code>）；</li><li><code>waifu.css</code> 是看板娘的样式表。</li></ul><p class="div-border left red">警告：作者不对包括但不限于 waifu-tips.js 和 waifu-tips.json 文件中的内容负责，请自行确保它们是合适的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Live2D Widget&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://forthebadge.com/images/badges/built-with-love.svg&quot; alt=&quot;&quot;&gt;&lt;img src=&quot;https://forthebadge.com/imag</summary>
      
    
    
    
    <category term="编程" scheme="https://blog.randomench.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="编程" scheme="https://blog.randomench.top/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="实用" scheme="https://blog.randomench.top/tags/%E5%AE%9E%E7%94%A8/"/>
    
    <category term="前端" scheme="https://blog.randomench.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="live2d" scheme="https://blog.randomench.top/tags/live2d/"/>
    
  </entry>
  
  <entry>
    <title>关于Python一些技巧</title>
    <link href="https://blog.randomench.top/article/ebe4aa6897b7/"/>
    <id>https://blog.randomench.top/article/ebe4aa6897b7/</id>
    <published>2022-05-25T07:23:55.000Z</published>
    <updated>2022-05-26T15:42:35.040Z</updated>
    
    <content type="html"><![CDATA[<h1>序</h1><p>记Python学习过程中遇到的问题及技巧总结</p><span id="more"></span><h1>pip的换源</h1><p>pip安装一些库的时候时常卡住，此时可以使用换源来解决。</p><div class="tabs" id="pip"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#pip-1">临时</button></li><li class="tab"><button type="button" data-href="#pip-2">永久</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="pip-1"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install xxx -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="pip-2"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip config <span class="built_in">set</span> <span class="keyword">global</span>.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="国内常用镜像源：">国内常用镜像源：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">阿里云 http://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">豆瓣http://pypi.douban.com/simple/</span><br><span class="line">清华大学 https://pypi.tuna.tsinghua.edu.cn/simple/</span><br><span class="line">中国科学技术大学 http://pypi.mirrors.ustc.edu.cn/simple/</span><br><span class="line">华中科技大学http://pypi.hustunique.com/</span><br></pre></td></tr></table></figure><h1>网页请求</h1><p>request，aiohttp，httpx的简单使用</p><h2 id="代理">代理</h2><div class="tabs" id="proxy"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#proxy-1">httpx</button></li><li class="tab"><button type="button" data-href="#proxy-2">requests</button></li><li class="tab"><button type="button" data-href="#proxy-3">aiohttp异步请求</button></li><li class="tab"><button type="button" data-href="#proxy-4">httpx异步请求</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="proxy-1"><p>httpx拥有全局的默认超时时间，没有特殊需要的话不需要设置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"></span><br><span class="line">proxies = &#123;</span><br><span class="line">    <span class="string">&quot;http://&quot;</span>: <span class="string">&quot;http://localhost:1080&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://&quot;</span>: <span class="string">&quot;http://localhost:8031&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r = httpx.get(<span class="string">&#x27;https://www.example.org/&#x27;</span>, proxies=proxies)</span><br><span class="line">text = r.text</span><br><span class="line">content = r.content</span><br><span class="line">data = r.json()</span><br><span class="line">status_code = r.status_code</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="proxy-2"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">proxies = &#123;</span><br><span class="line">    <span class="string">&quot;http&quot;</span>: <span class="string">&quot;http://localhost:1080&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https&quot;</span>: <span class="string">&quot;http://localhost:8030&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r = requests.get(<span class="string">&#x27;https://www.example.org/&#x27;</span>, proxies=proxies, timeout=<span class="number">10</span>)</span><br><span class="line">text = r.text</span><br><span class="line">content = r.content</span><br><span class="line">data = r.json()</span><br><span class="line">status_code = r.status_code</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="proxy-3"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> aiohttp</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"> </span><br><span class="line">proxy = <span class="string">&quot;http://localhost:1080&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> session.get(<span class="string">&#x27;https://www.example.org/&#x27;</span>, proxy=proxy) <span class="keyword">as</span> resp:</span><br><span class="line">            <span class="keyword">if</span> resp.status == <span class="number">200</span>:</span><br><span class="line">                data= <span class="keyword">await</span> resp.text()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    loop = asyncio.get_event_loop()</span><br><span class="line">    loop.run_until_complete(main())</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="proxy-4"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">with</span> httpx.AsyncClient() <span class="keyword">as</span> client:</span><br><span class="line">    resp = <span class="keyword">await</span> client.get(<span class="string">&#x27;https://www.example.org/&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> resp.status_code == <span class="number">200</span>:</span><br><span class="line">        html = resp.text</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="SSL证书错误">SSL证书错误</h2><div class="tabs" id="ssl"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#ssl-1">httpx</button></li><li class="tab"><button type="button" data-href="#ssl-2">requests</button></li><li class="tab"><button type="button" data-href="#ssl-3">aiohttp</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="ssl-1"><p>在<code>AsyncClient</code>中加入<code>verify=False</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">with</span> httpx.AsyncClient(verify=<span class="literal">False</span>) <span class="keyword">as</span> client:</span><br><span class="line">    resp = <span class="keyword">await</span> client.get(<span class="string">&#x27;https://www.example.org/&#x27;</span>)</span><br><span class="line">    <span class="keyword">assert</span> resp.status_code == <span class="number">200</span></span><br><span class="line">    html = resp.text</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ssl-2"><p>加入<code>verify=False</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r = requests.get(<span class="string">&#x27;https://www.example.org/&#x27;</span>, timeout=<span class="number">10</span>, verify=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="ssl-3"><p>在<code>ClientSession</code>中加入<code>aiohttp.TCPConnector(verify_ssl=False)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">con = aiohttp.TCPConnector(verify_ssl=<span class="literal">False</span>)</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession(connector=con) <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> session.get(<span class="string">&#x27;https://www.example.org/&#x27;</span>, proxy=proxy, timeout=<span class="number">10</span>) <span class="keyword">as</span> resp:</span><br><span class="line">            <span class="keyword">if</span> resp.status == <span class="number">200</span>:</span><br><span class="line">                data= <span class="keyword">await</span> resp.text()</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="带cookie的请求">带cookie的请求</h2><p>先post请求login网址获取cookies，然后在headers和请求中加入cookies访问需要cookies的地址即可。</p><div class="tabs" id="cookie"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#cookie-1">requests</button></li><li class="tab"><button type="button" data-href="#cookie-2">httpx</button></li><li class="tab"><button type="button" data-href="#cookie-3">aiohttp</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="cookie-1"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">login_data = &#123;</span><br><span class="line">    <span class="string">&quot;username&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">    <span class="string">&quot;password&quot;</span>: <span class="string">&quot;admin&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_cookie</span>():</span><br><span class="line">    session = requests.Session()</span><br><span class="line">    <span class="comment"># 部分网站login请求也需要加headers</span></span><br><span class="line">    session.post(login_url, data=login_data)</span><br><span class="line">    request_cookies = session.cookies.get_dict()</span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>,</span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:90.0) Gecko/20100101 Firefox/90.0&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">        <span class="string">&quot;cookie&quot;</span>: <span class="string">f&quot;<span class="subst">&#123;cookie&#125;</span>&quot;</span> <span class="comment"># 不同网页的cookie格式不同，请适当更改</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> request_cookies, header</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">request</span>(<span class="params">*args</span>):</span><br><span class="line">    post_data = &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    cookie, headers = get_cookie()</span><br><span class="line">    res = requests.post(url, headers=headers, cookies=cookie, data=post_data, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">return</span> res.text</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="cookie-2"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> http.cookies</span><br><span class="line"><span class="keyword">import</span> httpx</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">get_cookies</span>():</span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> httpx.AsyncClient() <span class="keyword">as</span> client:</span><br><span class="line">        resp = <span class="keyword">await</span> client.post(login_url, data=data)</span><br><span class="line">        <span class="keyword">if</span> resp.status_code == <span class="number">200</span>:</span><br><span class="line">            cookies = client.cookies</span><br><span class="line">            cookies = http.cookies.SimpleCookie(cookies)</span><br><span class="line">            cookies = &#123;i.key: i.value <span class="keyword">for</span> i <span class="keyword">in</span> cookies.values()&#125;</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            cookies = <span class="literal">None</span></span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate, br&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.9&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>,</span><br><span class="line">            <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:90.0) Gecko/20100101 Firefox/90.0&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cookie&quot;</span>: <span class="string">f&quot;session=<span class="subst">&#123;cookies[<span class="string">&#x27;session&#x27;</span>]&#125;</span>&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cookies, headers</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="cookie-3"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">get_cookies</span>():</span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">async</span> <span class="keyword">with</span> session.post(login_url, data=data) <span class="keyword">as</span> resp:</span><br><span class="line">            <span class="keyword">if</span> resp.status == <span class="number">200</span>:</span><br><span class="line">                text = session.cookie_jar.filter_cookies(login_url)</span><br><span class="line">                cookie = &#123;i: text[i].value <span class="keyword">for</span> i <span class="keyword">in</span> text&#125;</span><br><span class="line">                <span class="keyword">return</span> cookie</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">None</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
    <summary type="html">&lt;h1&gt;序&lt;/h1&gt;
&lt;p&gt;记Python学习过程中遇到的问题及技巧总结&lt;/p&gt;</summary>
    
    
    
    <category term="编程" scheme="https://blog.randomench.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Python" scheme="https://blog.randomench.top/tags/Python/"/>
    
    <category term="编程" scheme="https://blog.randomench.top/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="爬虫" scheme="https://blog.randomench.top/tags/%E7%88%AC%E8%99%AB/"/>
    
    <category term="实用" scheme="https://blog.randomench.top/tags/%E5%AE%9E%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>Steam Apex Legends 领取方法</title>
    <link href="https://blog.randomench.top/article/140d6ed8c76c/"/>
    <id>https://blog.randomench.top/article/140d6ed8c76c/</id>
    <published>2021-12-27T09:15:24.000Z</published>
    <updated>2022-07-03T08:03:19.820Z</updated>
    
    <content type="html"><![CDATA[<h3 id="序-2">序</h3><p>众所周知Apex在Steam上进行了锁国区，国内地区无法获取，不过办法总比困难多。<br>网上大多数教程使用加速器入库，不想注册账号的可以看看这个。</p><span id="more"></span><h3 id="步骤">步骤</h3><p class="div-border left red">部分方法可能已经不可用</p><div class="tabs" id="apex"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#apex-1">方法一</button></li><li class="tab"><button type="button" data-href="#apex-2">方法二</button></li><li class="tab"><button type="button" data-href="#apex-3">方法三</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="apex-1"><p>1.用加速器加速 Steam 国外地区，或梯子戳开全局代理 <br>2.使用 现代 浏览器登录网页 Steam：<a href="https://store.steampowered.com">https://store.steampowered.com</a> <br>3.添加任意一款 付费 游戏到购物车 <br>4.打开 Steam 购物车：<a href="https://store.steampowered.com/cart">https://store.steampowered.com/cart</a> <br>5.在商品右上角找到 国家/地区 选择不是中国的选项<br>6.转换成功后，新建空白页访问：<a href="https://store.steampowered.com/account/licenses">https://store.steampowered.com/account/licenses</a> 键盘按下 F12 打开开发者工具<br>7.转到 Console/控制台 选项，输入下列代码\</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">jQuery.<span class="title function_">post</span>(<span class="string">&#x27;//store.steampowered.com/checkout/addfreelicense&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">action</span>: <span class="string">&#x27;add_to_cart&#x27;</span>,</span><br><span class="line">    <span class="attr">sessionid</span>: g_sessionID,</span><br><span class="line">    <span class="attr">subid</span>: <span class="number">401407</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>8.切换至 Network/网络 选项卡，找到一条名为 addfreelicense 的请求记录<br>9.回到 Steam 客户端，“库”内已经有了 Apex Legends 了，安装即可<br>10.最后！！！一定要记得回到购物车界面，把国家/地区切回至原来的国家</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="apex-2"><p>1.用加速器加速 Steam 国外地区，或梯子戳开全局代理<br>2.使用 现代 浏览器登录网页 Steam：<a href="https://store.steampowered.com">https://store.steampowered.com</a><br>3.添加任意一款 付费 游戏到购物车<br>4.打开 Steam 购物车：<a href="https://store.steampowered.com/cart">https://store.steampowered.com/cart</a><br>5.在商品右上角找到 国家/地区 选择不是中国的选项<br>6.转换成功后，新建空白页访问：<a href="https://store.steampowered.com/app/1172470/apex">https://store.steampowered.com/app/1172470/apex</a> 键盘按下 F12 打开开发者工具<br>7.转到 Console/控制台 选项，输入下列代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">AddFreeLicense</span>(<span class="number">401407</span>);</span><br></pre></td></tr></table></figure><p>8.切换至 Network/网络 选项卡，找到一条名为 addfreelicense 的请求记录<br>9.回到 Steam 客户端，“库”内已经有了 Apex Legends 了，安装即可<br>10.最后！！！一定要记得回到购物车界面，把国家/地区切回至原来的国家</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="apex-3"><p>1.用加速器加速 Steam 国外地区，或梯子戳开全局代理<br>2.退出 Steam 重新登陆<br>3.按下 <code>win+r</code> 快捷键呼出运行窗口输入以下代码</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steam://install/1172470</span><br></pre></td></tr></table></figure><p>8.入库成功</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;序-2&quot;&gt;序&lt;/h3&gt;
&lt;p&gt;众所周知Apex在Steam上进行了锁国区，国内地区无法获取，不过办法总比困难多。&lt;br&gt;
网上大多数教程使用加速器入库，不想注册账号的可以看看这个。&lt;/p&gt;</summary>
    
    
    
    <category term="游戏" scheme="https://blog.randomench.top/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
    <category term="教程" scheme="https://blog.randomench.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="游戏" scheme="https://blog.randomench.top/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>刷课插件分享</title>
    <link href="https://blog.randomench.top/article/7516a90986ca/"/>
    <id>https://blog.randomench.top/article/7516a90986ca/</id>
    <published>2021-12-01T03:10:41.000Z</published>
    <updated>2022-05-25T08:19:41.430Z</updated>
    
    <content type="html"><![CDATA[<h3 id="序">序</h3><p>想必大家都在为烦闷无聊的网课而烦恼，不刷又拿不到学分，在此推荐一些好用的刷网课插件。</p><span id="more"></span><h3 id="网址">网址</h3><p>首先，使用Chrome或者Firefox浏览器，安装 <a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo">Tampermonkey</a> (油猴)插件(需要翻墙)<br>如果没有梯子可以在<a href="https://www.randomench.top/documents/Tampermonkey.zip">此处</a>下载<br>接着用此插件安装相关脚本:</p><blockquote><p><a href="https://greasyfork.org/zh-CN/scripts/443122-%E8%B6%85%E6%98%9F%E5%AD%A6%E4%B9%A0%E9%80%9A%E5%B0%8F%E5%8A%A9%E6%89%8B-%E8%A7%86%E9%A2%91%E4%B8%93%E7%89%88">超星学习通视频助手</a><br><a href="https://greasyfork.org/zh-CN/scripts/435357-%E8%B6%85%E6%98%9F%E5%AD%A6%E4%B9%A0%E9%80%9A%E5%B0%8F%E5%8A%A9%E6%89%8B-%E7%AB%A0%E8%8A%82-%E4%BD%9C%E4%B8%9A-%E8%80%83%E8%AF%95-%E4%BC%98%E5%8C%96%E8%AF%BE%E7%A8%8B%E5%88%87%E6%8D%A2-%E6%94%AF%E6%8C%81%E6%96%B0%E7%89%88">超星学习通作业助手</a><br><a href="https://greasyfork.org/zh-CN/scripts/436994-%E6%99%BA%E6%85%A7%E6%A0%91-%E7%9F%A5%E5%88%B0%E7%BD%91%E8%AF%BE%E5%B0%8F%E5%8A%A9%E6%89%8B-2022-5-11-%E4%BF%AE%E5%A4%8D%E6%A3%80%E6%B5%8B%E5%92%8C%E7%AD%94%E6%A1%88%E6%9F%A5%E8%AF%A2-%E5%8F%AF%E4%BB%A5%E8%AE%BE%E7%BD%AE%E6%8C%82%E6%9C%BA%E6%97%B6%E9%95%BF-%E5%88%B0%E6%97%B6%E9%97%B4%E8%87%AA%E5%8A%A8%E6%8F%90%E9%86%92-%E8%87%AA%E5%8A%A8%E6%92%AD%E6%94%BE%E4%B8%8B%E4%B8%80%E4%B8%AA%E8%A7%86%E9%A2%91-%E6%94%AF%E6%8C%81%E6%99%BA%E6%85%A7%E6%A0%91-%E7%9F%A5%E5%88%B0%E8%80%83%E8%AF%95-%E4%BD%9C%E4%B8%9A-%E5%85%A8%E7%BD%91%E6%9C%80%E5%85%A8%E9%A2%98%E5%BA%93-%E6%B0%B8%E4%B9%85%E5%85%8D%E8%B4%B9-%E5%AE%89%E5%85%A8%E4%BD%BF%E7%94%A8">智慧树知到作业助手</a><br><a href="https://greasyfork.org/zh-CN/scripts/421562-%E7%BD%91%E8%AF%BE%E5%B0%8F%E5%B8%AE%E6%89%8B-%E6%99%BA%E6%85%A7%E6%A0%91%E7%9F%A5%E5%88%B0-500%E5%80%8D%E6%9E%81%E9%80%9F-%E7%A7%92%E6%8E%89%E8%A7%81%E9%9D%A2%E8%AF%BE-%E5%8F%AF%E8%BF%87%E6%A3%80%E6%B5%8B">智慧树知到视频助手</a><br><a href="https://greasyfork.org/zh-CN/scripts/404472-%E4%B8%AD%E5%9B%BD%E5%A4%A7%E5%AD%A6mooc%E8%A7%86%E9%A2%91%E4%B8%AD%E9%A2%98%E7%9B%AE%E8%87%AA%E5%8A%A8%E8%B7%B3%E8%BF%87">慕课视频中题目自动跳过</a></p></blockquote><h3 id="使用方法">使用方法</h3><p>此处以chrome浏览器为例</p><h1>安装</h1><p>如果油猴插件从浏览器安装可跳过这一步<br>解压文件后得到crx文件<br>按下图步骤操作，选择crx文件安装，安装完毕<br><img src="/img/plugin/1.png" alt="1"><br><img src="/img/plugin/2.png" alt="2"><br><img src="/img/plugin/3.png" alt="3"></p><h1>脚本</h1><p>从上文中所给的链接中安装，全部安装完毕后重启浏览器即可使用。<br>相关网页中也可管理插件列表，具体方法不做说明。<br><img src="/img/plugin/4.png" alt="4"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;序&quot;&gt;序&lt;/h3&gt;
&lt;p&gt;想必大家都在为烦闷无聊的网课而烦恼，不刷又拿不到学分，在此推荐一些好用的刷网课插件。&lt;/p&gt;</summary>
    
    
    
    <category term="实用" scheme="https://blog.randomench.top/categories/%E5%AE%9E%E7%94%A8/"/>
    
    
    <category term="工具" scheme="https://blog.randomench.top/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="网课" scheme="https://blog.randomench.top/tags/%E7%BD%91%E8%AF%BE/"/>
    
    <category term="油猴" scheme="https://blog.randomench.top/tags/%E6%B2%B9%E7%8C%B4/"/>
    
  </entry>
  
  <entry>
    <title>记实用网站</title>
    <link href="https://blog.randomench.top/article/923a8ce17df1/"/>
    <id>https://blog.randomench.top/article/923a8ce17df1/</id>
    <published>2021-11-28T14:20:34.000Z</published>
    <updated>2022-05-23T11:26:18.151Z</updated>
    
    <content type="html"><![CDATA[<h3 id="序-3">序</h3><p>在此记录一些实用的网址，有意者可评论追加。</p> <span id="more"></span><h3 id="工具">工具</h3><p><a href="https://music.liuzhijin.cn/">音乐直链搜索</a><br><a href="https://www.wenshushu.cn/">文件传输</a><br><a href="https://www.keyfc.net/bbs/tools/tudoucode.aspx">与佛论禅</a><br><a href="https://bigjpg.com/">图片分辨率提高</a><br><a href="https://msdn.itellyou.cn/">MSDN下载站</a><br><a href="https://saucenao.com/">SauceNAO</a><br><a href="https://ascii2d.net/">ascii2d</a><br><a href="https://minecraft.fandom.com/zh/wiki/Minecraft_Wiki">Minecraft_Wiki</a><br><a href="https://www.desmos.com/?lang=zh-CN">desmos</a><br><a href="https://ncm.worthsee.com/">NCM转MP3</a></p><h3 id="音游">音游</h3><p><a href="http://osugame.online/">Osu!网页版</a><br><a href="https://taiko.bui.pm/">太鼓达人网页版</a><br><a href="https://bangplayer.live/">Bang!Dream网页版</a><br><a href="https://www.thac.cc/kano/x/index.php/">4K练习</a><br><a href="https://lowi.ro/">LowLight下载站</a><br><a href="https://www.schwarzer.wang/">Schwarzer下载站</a><br><a href="https://map.bemanicn.com/">全国音游地图</a><br><a href="http://www.komani.moe/">Konami工具箱</a></p><h3 id="Galgame">Galgame</h3><p><a href="https://vndb.org/">VNDB</a><br><a href="https://bbs.zdfx.net/">终点论坛</a><br><a href="https://www.galcg.com/">Gal领域</a><br><a href="https://blog.reimu.net/">灵梦御所</a><br><a href="https://hacg.me/">琉璃神社</a><br><a href="https://ww1.galacg.me/">绅士仓库</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;序-3&quot;&gt;序&lt;/h3&gt;
&lt;p&gt;在此记录一些实用的网址，有意者可评论追加。&lt;/p&gt;</summary>
    
    
    
    <category term="实用" scheme="https://blog.randomench.top/categories/%E5%AE%9E%E7%94%A8/"/>
    
    
    <category term="工具" scheme="https://blog.randomench.top/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="Galgame" scheme="https://blog.randomench.top/tags/Galgame/"/>
    
    <category term="游戏" scheme="https://blog.randomench.top/tags/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="网页" scheme="https://blog.randomench.top/tags/%E7%BD%91%E9%A1%B5/"/>
    
    <category term="音游" scheme="https://blog.randomench.top/tags/%E9%9F%B3%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>如何寻找Gal</title>
    <link href="https://blog.randomench.top/article/bda44aa762dd/"/>
    <id>https://blog.randomench.top/article/bda44aa762dd/</id>
    <published>2021-11-23T15:26:48.000Z</published>
    <updated>2022-06-03T13:48:01.213Z</updated>
    
    <content type="html"><![CDATA[<h3 id="准备">准备</h3><p>首先你需要知道你需要的Gal的名称，最好知道日文和英文，搜索时会用到，接着就可以去资源网查找了。</p><h3 id="不知道玩什么Gal">不知道玩什么Gal</h3><p><a href="https://vndb.org/">VNDB</a> 可以自选tag筛选Gal的网站，根据你想玩的类型选择tag查找吧~ <br>注：网页为英文<br><img src="/img/gal/vndb.png" alt="vndb"></p><h3 id="如何查找">如何查找</h3><blockquote><p><a href="https://www.galcg.com/">Gal领域</a> （不需要魔法，需要付费） <br><a href="https://blog.reimu.net/">灵梦御所</a> （需要魔法，可以通过改hosts文件直接访问） <br><a href="https://www.acg.gy/">琉璃神社</a> （需要魔法，此为域名发布页） <br><a href="https://bbs.zdfx.net/">终点论坛</a> （不需要魔法） <br><a href="https://myacg.xyz/">Myacg</a> （资源发布页）</p></blockquote><h3 id="如何使用琉璃神社">如何使用琉璃神社</h3><p>翻到页面最下方，你会看见<code>magnet:?xt=urn:btih:</code> <br>且文中会有神秘代码，我猜你应该知道怎么用。</p><h3 id="如何使用灵梦御所">如何使用灵梦御所</h3><p>在hosts文件里加入记录<code>104.28.28.43 blog.reimu.net</code> <br>文件位置：C:\Windows\System32\drivers\etc\hosts <br>按win+r输入cmd打开，输入<code>ipconfig /flushdns</code>后即可无需魔法访问网站 <br>打开网站后会提示输入密码，密码为⑨，下载的压缩包密码基本上也是⑨，除非有特别说明 <br><img src="/img/gal/reimu.png" alt="reimu"><br>找到相应Gal后，向下翻到发布者位置使用键盘按键↑↑↓↓←→←→BA即可得到隐藏内容 <br><img src="/img/gal/hide1.png" alt="hide1"><br><img src="/img/gal/hide2.png" alt="hide2"><br>部分内容为标准码而非网盘链接</p><h3 id="标准码使用">标准码使用</h3><p>使用Chrome或者Firefox浏览器，安装 <a href="https://chrome.google.com/webstore/detail/tampermonkey/dhdgffkkebhmkfjojejmpbldmpobfkfo">Tampermonkey</a> (油猴)插件 <br>并在插件管理页面安装 <a href="https://greasyfork.org/zh-CN/scripts/427628-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%A7%92%E4%BC%A0%E9%93%BE%E6%8E%A5%E6%8F%90%E5%8F%96-%E6%9C%80%E6%96%B0%E5%8F%AF%E7%BB%B4%E6%8A%A4%E7%89%88%E6%9C%AC">秒传链接提取</a> 脚本<br>打开 <a href="https://pan.baidu.com/">百度网盘网页版</a> 看见上传按键旁多出&quot;秒传链接&quot; <br>复制标准码保存到网盘下载即可<br><img src="/img/gal/pan.png" alt="pan"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;准备&quot;&gt;准备&lt;/h3&gt;
&lt;p&gt;首先你需要知道你需要的Gal的名称，最好知道日文和英文，搜索时会用到，接着就可以去资源网查找了。&lt;/p&gt;
&lt;h3 id=&quot;不知道玩什么Gal&quot;&gt;不知道玩什么Gal&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://vndb.org/&quot;</summary>
      
    
    
    
    <category term="游戏" scheme="https://blog.randomench.top/categories/%E6%B8%B8%E6%88%8F/"/>
    
    
    <category term="教程" scheme="https://blog.randomench.top/tags/%E6%95%99%E7%A8%8B/"/>
    
    <category term="Galgame" scheme="https://blog.randomench.top/tags/Galgame/"/>
    
    <category term="游戏" scheme="https://blog.randomench.top/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
</feed>
